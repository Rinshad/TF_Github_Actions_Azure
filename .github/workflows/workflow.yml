name: 'Terraform GitHub Workflow for Azure'

on:
  pull_request:
    branches:
      - master
  issue_comment:
    types:
      - created

env: 
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

permissions:
  contents: read
  issues: write

jobs:
  terraform-plan:
    if: github.event_name == 'pull_request'
    name: 'Terraform Plan' 
    runs-on: ubuntu-latest
    env:
      # This is needed since we are running terraform with read-only permissions
      ARM_SKIP_PROVIDER_REGISTRATION: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -var-file="dev.tfvars" -out=tfplan

      - name: Save Plan as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: tfplan

  terraform-apply:
    if: github.event_name == 'issue_comment' && github.event.issue.pull_request.merged == true && contains(github.event.comment.body, 'apply')
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    env:
      ARM_SKIP_PROVIDER_REGISTRATION: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Plan
        uses: actions/download-artifact@v3
        with:
          name: tfplan

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

