name: 'Terraform Github Pipeline'
on:
  push:
    branches:
    - master
  pull_request:
    branches:
        - master
env: 
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

permissions:
  contents: read

jobs:
  terraform-plan:
    name: 'Terraform Plan' 
    runs-on: ubuntu-latest
    env:
        #this is needed since we are running terraform with read-only permissions
        ARM_SKIP_PROVIDER_REGISTRATION: true

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI 
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_wrapper: false

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -var-file="dev.tfvars"  -input=false

    # Terraform Apply
    - name: Terraform Apply
      run: terraform apply -var-file="dev.tfvars" -auto-approve -input=false
    
    # Wait before destroy
    - name: Wait for 30 seconds
      run: sleep 30
    
    # Terraform destroy
    - name: Terraform destroy
      run: terraform destroy -auto-approve
